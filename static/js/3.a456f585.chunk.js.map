{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/clsx/dist/clsx.m.js","../../src/utils/propValidator.ts","../../src/utils/constant.ts","../../src/utils/collapseToast.ts","../../src/utils/cssTransition.tsx","../../src/utils/mapper.ts","../../src/core/eventManager.ts","../../src/hooks/useToast.ts","../../src/components/CloseButton.tsx","../../src/components/ProgressBar.tsx","../../src/components/Icons.tsx","../../src/components/Toast.tsx","../../src/components/Transitions.tsx","../../src/components/ToastContainer.tsx","../../src/hooks/useToastContainer.ts","../../src/core/toast.ts","../node_modules/emailjs-com/es/store/store.js","../node_modules/emailjs-com/es/utils/validateParams.js","../node_modules/emailjs-com/es/models/EmailJSResponseStatus.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/emailjs-com/es/api/sendPost.js","../node_modules/emailjs-com/es/index.js","../node_modules/emailjs-com/es/methods/init/init.js","../node_modules/emailjs-com/es/methods/send/send.js","../node_modules/emailjs-com/es/methods/sendForm/sendForm.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","_objectWithoutProperties","excluded","sourceKeys","indexOf","sourceSymbolKeys","prototype","propertyIsEnumerable","call","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","r","e","t","f","n","clsx","isNum","v","isNaN","isBool","isStr","isFn","parseClassName","isToastIdValid","toastId","canBeRendered","content","isValidElement","POSITION","TOP_LEFT","TOP_RIGHT","TOP_CENTER","BOTTOM_LEFT","BOTTOM_RIGHT","BOTTOM_CENTER","TYPE","INFO","SUCCESS","WARNING","ERROR","DEFAULT","duration","cssTransition","enter","collapseDuration","exit","appendPosition","collapse","children","isIn","position","preventExitTransition","done","nodeRef","enterClassName","exitClassName","baseClassName","useRef","animationStep","onEntered","current","node","dispatchEvent","Event","removeEventListener","type","className","onExited","scrollHeight","style","requestAnimationFrame","minHeight","height","transition","padding","margin","setTimeout","collapseToast","useLayoutEffect","addEventListener","useEffect","React","toToastItem","toast","status","containerId","props","id","theme","data","isLoading","icon","eventManager","list","Map","emitQueue","on","event","callback","this","has","set","get","off","cb","delete","cancelEmit","timers","clearTimeout","emit","timer","getX","targetTouches","clientX","getY","clientY","eventHandlers","CloseButton","closeToast","ariaLabel","onClick","stopPropagation","viewBox","fillRule","d","ProgressBar","delay","isRunning","hide","userStyle","controlledProgress","progress","rtl","animationDuration","animationPlayState","opacity","transform","defaultClassName","cx","classNames","role","defaultProps","Svg","_ref","rest","width","fill","Icons","info","warning","success","error","spinner","Toast","useState","setIsRunning","setPreventExitTransition","toastRef","drag","start","x","y","delta","removalDistance","canCloseOnClick","canDrag","boundingRect","didMove","syncProps","autoClose","pauseOnHover","closeOnClick","onDragStart","draggable","document","onDragMove","onDragEnd","getBoundingClientRect","nativeEvent","draggableDirection","offsetWidth","draggablePercent","offsetHeight","onDragTransitionEnd","top","bottom","left","right","pauseToast","playToast","Math","abs","once","onOpen","onClose","pauseOnFocusLoss","hasFocus","window","onMouseDown","onTouchStart","onMouseUp","onTouchEnd","onMouseEnter","onMouseLeave","useToast","closeButton","hideProgressBar","Transition","bodyClassName","bodyStyle","progressClassName","progressStyle","updateId","deleteToast","cssClasses","isProgressControlled","maybeIcon","iconProps","Icon","cloneElement","ref","Bounce","ToastContainer","forwardRef","useReducer","forceUpdate","toastIds","setToastIds","containerRef","toastToRender","isToastActive","instance","toastKey","displayedToast","count","queue","getToast","clearWaitingQueue","limit","removeToast","state","dequeueToast","shift","appendToast","toastContent","buildToast","options","staleId","enableMultiContainer","isNotAnUpdate","toastAutoClose","containerAutoClose","toastProps","toastClassName","toastStyle","removed","queueLen","freeSlot","toDequeue","getToastToRender","toRender","collection","values","newestOnTop","reverse","p","useToastContainer","getClassName","toastList","containerStyle","pointerEvents","map","displayName","latestInstance","containers","generateToastId","random","toString","substring","getToastId","dispatchToast","size","mergeOptions","createToastByType","loading","promise","pending","render","resetParams","resolver","input","result","baseParams","params","update","dismiss","then","catch","err","warn","dark","isActive","container","oldOptions","oldContent","nextOptions","onChange","containerInstance","item","store","_origin","validateParams","userID","serviceID","templateID","EmailJSResponseStatus","httpResponse","Constructor","text","responseText","sendPost","url","headers","Promise","resolve","reject","xhr","XMLHttpRequest","responseStatus","open","setRequestHeader","send","init","origin","_userID","templatePrams","uID","lib_version","user_id","service_id","template_id","template_params","JSON","stringify","sendForm","form","currentForm","querySelector","nodeName","findHTMLForm","formData","FormData","append"],"mappings":"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","file":"static/js/3.a456f585.chunk.js","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}export function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","import { isValidElement } from 'react';\n\nimport { Id } from '../types';\n\nexport function isNum(v: any): v is Number {\n  return typeof v === 'number' && !isNaN(v);\n}\n\nexport function isBool(v: any): v is Boolean {\n  return typeof v === 'boolean';\n}\n\nexport function isStr(v: any): v is String {\n  return typeof v === 'string';\n}\n\nexport function isFn(v: any): v is Function {\n  return typeof v === 'function';\n}\n\nexport function parseClassName(v: any) {\n  return isStr(v) || isFn(v) ? v : null;\n}\n\nexport function isToastIdValid(toastId?: Id) {\n  return toastId === 0 || toastId;\n}\n\nexport function getAutoCloseDelay(\n  toastAutoClose?: false | number,\n  containerAutoClose?: false | number\n) {\n  return toastAutoClose === false ||\n    (isNum(toastAutoClose) && toastAutoClose > 0)\n    ? toastAutoClose\n    : containerAutoClose;\n}\n\nexport function canBeRendered<T>(content: T): boolean {\n  return (\n    isValidElement(content) || isStr(content) || isFn(content) || isNum(content)\n  );\n}\n","import { ToastPosition, TypeOptions } from '../types';\n\ntype KeyOfPosition =\n  | 'TOP_LEFT'\n  | 'TOP_RIGHT'\n  | 'TOP_CENTER'\n  | 'BOTTOM_LEFT'\n  | 'BOTTOM_RIGHT'\n  | 'BOTTOM_CENTER';\n\ntype KeyOfType = 'INFO' | 'SUCCESS' | 'WARNING' | 'ERROR' | 'DEFAULT';\n\nexport const POSITION: { [key in KeyOfPosition]: ToastPosition } = {\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n  TOP_CENTER: 'top-center',\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  BOTTOM_CENTER: 'bottom-center'\n};\n\nexport const TYPE: { [key in KeyOfType]: TypeOptions } = {\n  INFO: 'info',\n  SUCCESS: 'success',\n  WARNING: 'warning',\n  ERROR: 'error',\n  DEFAULT: 'default'\n};\n\nexport const enum Default {\n  COLLAPSE_DURATION = 300,\n  DEBOUNCE_DURATION = 50,\n  CSS_NAMESPACE = 'Toastify',\n  DRAGGABLE_PERCENT = 80\n}\n\nexport const enum Direction {\n  X = 'x',\n  Y = 'y'\n}\n\nexport const enum SyntheticEvent {\n  ENTRANCE_ANIMATION_END = 'd'\n}\n","import { Default } from './constant';\n\n/**\n * Used to collapse toast after exit animation\n */\nexport function collapseToast(\n  node: HTMLElement,\n  done: () => void,\n  duration = Default.COLLAPSE_DURATION\n) {\n  const { scrollHeight, style } = node;\n\n  requestAnimationFrame(() => {\n    style.minHeight = 'initial';\n    style.height = scrollHeight + 'px';\n    style.transition = `all ${duration}ms`;\n\n    requestAnimationFrame(() => {\n      style.height = '0';\n      style.padding = '0';\n      style.margin = '0';\n      setTimeout(done, duration as number);\n    });\n  });\n}\n","import React, { useEffect, useLayoutEffect, useRef } from 'react';\nimport { collapseToast } from './collapseToast';\nimport { Default, SyntheticEvent } from './constant';\n\nimport { ToastTransitionProps } from '../types';\n\nexport interface CSSTransitionProps {\n  /**\n   * Css class to apply when toast enter\n   */\n  enter: string;\n\n  /**\n   * Css class to apply when toast leave\n   */\n  exit: string;\n\n  /**\n   * Append current toast position to the classname.\n   * If multiple classes are provided, only the last one will get the position\n   * For instance `myclass--top-center`...\n   * `Default: false`\n   */\n  appendPosition?: boolean;\n\n  /**\n   * Collapse toast smoothly when exit animation end\n   * `Default: true`\n   */\n  collapse?: boolean;\n\n  /**\n   * Collapse transition duration\n   * `Default: 300`\n   */\n  collapseDuration?: number;\n}\n\nconst enum AnimationStep {\n  Enter,\n  Exit\n}\n\n/**\n * Css animation that just work.\n * You could use animate.css for instance\n *\n *\n * ```\n * cssTransition({\n *   enter: \"animate__animated animate__bounceIn\",\n *   exit: \"animate__animated animate__bounceOut\"\n * })\n * ```\n *\n */\nexport function cssTransition({\n  enter,\n  exit,\n  appendPosition = false,\n  collapse = true,\n  collapseDuration = Default.COLLAPSE_DURATION\n}: CSSTransitionProps) {\n  return function ToastTransition({\n    children,\n    position,\n    preventExitTransition,\n    done,\n    nodeRef,\n    isIn\n  }: ToastTransitionProps) {\n    const enterClassName = appendPosition ? `${enter}--${position}` : enter;\n    const exitClassName = appendPosition ? `${exit}--${position}` : exit;\n    const baseClassName = useRef<string>();\n    const animationStep = useRef(AnimationStep.Enter);\n\n    useLayoutEffect(() => {\n      onEnter();\n    }, []);\n\n    useEffect(() => {\n      if (!isIn) preventExitTransition ? onExited() : onExit();\n    }, [isIn]);\n\n    function onEnter() {\n      const node = nodeRef.current!;\n      baseClassName.current = node.className;\n      node.className += ` ${enterClassName}`;\n      node.addEventListener('animationend', onEntered);\n      node.addEventListener('animationcancel', onEntered);\n    }\n\n    function onEntered(e: AnimationEvent) {\n      if (e.target !== nodeRef.current) return;\n\n      const node = nodeRef.current!;\n      node.dispatchEvent(new Event(SyntheticEvent.ENTRANCE_ANIMATION_END));\n      node.removeEventListener('animationend', onEntered);\n      node.removeEventListener('animationcancel', onEntered);\n      if (\n        animationStep.current === AnimationStep.Enter &&\n        e.type !== 'animationcancel'\n      ) {\n        node.className = baseClassName.current!;\n      }\n    }\n\n    function onExit() {\n      animationStep.current = AnimationStep.Exit;\n      const node = nodeRef.current!;\n\n      node.className += ` ${exitClassName}`;\n      node.addEventListener('animationend', onExited);\n    }\n\n    function onExited() {\n      const node = nodeRef.current!;\n\n      node.removeEventListener('animationend', onExited);\n      collapse ? collapseToast(node, done, collapseDuration) : done();\n    }\n\n    return <>{children}</>;\n  };\n}\n","import { Toast, ToastItem, ToastItemStatus } from '../types';\n\nexport function toToastItem(toast: Toast, status: ToastItemStatus): ToastItem {\n  return {\n    content: toast.content,\n    containerId: toast.props.containerId,\n    id: toast.props.toastId,\n    theme: toast.props.theme,\n    type: toast.props.type,\n    data: toast.props.data || {},\n    isLoading: toast.props.isLoading,\n    icon: toast.props.icon,\n    status\n  };\n}\n","import {\n  Id,\n  ToastContent,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps,\n  ToastItem\n} from '../types';\nimport { ContainerInstance } from '../hooks';\n\nexport const enum Event {\n  Show,\n  Clear,\n  DidMount,\n  WillUnmount,\n  Change,\n  ClearWaitingQueue\n}\n\ntype OnShowCallback = (\n  content: ToastContent,\n  options: NotValidatedToastProps\n) => void;\ntype OnClearCallback = (id?: Id) => void;\ntype OnClearWaitingQueue = (params: ClearWaitingQueueParams) => void;\ntype OnDidMountCallback = (containerInstance: ContainerInstance) => void;\ntype OnWillUnmountCallback = OnDidMountCallback;\n\nexport type OnChangeCallback = (toast: ToastItem) => void;\n\ntype Callback =\n  | OnShowCallback\n  | OnClearCallback\n  | OnClearWaitingQueue\n  | OnDidMountCallback\n  | OnWillUnmountCallback\n  | OnChangeCallback;\ntype TimeoutId = ReturnType<typeof setTimeout>;\n\nexport interface EventManager {\n  list: Map<Event, Callback[]>;\n  emitQueue: Map<Event, TimeoutId[]>;\n  on(event: Event.Show, callback: OnShowCallback): EventManager;\n  on(event: Event.Clear, callback: OnClearCallback): EventManager;\n  on(\n    event: Event.ClearWaitingQueue,\n    callback: OnClearWaitingQueue\n  ): EventManager;\n  on(event: Event.DidMount, callback: OnDidMountCallback): EventManager;\n  on(event: Event.WillUnmount, callback: OnWillUnmountCallback): EventManager;\n  on(event: Event.Change, callback: OnChangeCallback): EventManager;\n  off(event: Event, callback?: Callback): EventManager;\n  cancelEmit(event: Event): EventManager;\n  emit(\n    event: Event.Show,\n    content: React.ReactNode,\n    options: NotValidatedToastProps\n  ): void;\n  emit(event: Event.Clear, id?: string | number): void;\n  emit(event: Event.ClearWaitingQueue, params: ClearWaitingQueueParams): void;\n  emit(event: Event.DidMount, containerInstance: ContainerInstance): void;\n  emit(event: Event.WillUnmount, containerInstance: ContainerInstance): void;\n  emit(event: Event.Change, data: ToastItem): void;\n}\n\nexport const eventManager: EventManager = {\n  list: new Map(),\n  emitQueue: new Map(),\n\n  on(event: Event, callback: Callback) {\n    this.list.has(event) || this.list.set(event, []);\n    this.list.get(event)!.push(callback);\n    return this;\n  },\n\n  off(event, callback) {\n    if (callback) {\n      const cb = this.list.get(event)!.filter(cb => cb !== callback);\n      this.list.set(event, cb);\n      return this;\n    }\n    this.list.delete(event);\n    return this;\n  },\n\n  cancelEmit(event) {\n    const timers = this.emitQueue.get(event);\n    if (timers) {\n      timers.forEach(clearTimeout);\n      this.emitQueue.delete(event);\n    }\n\n    return this;\n  },\n\n  /**\n   * Enqueue the event at the end of the call stack\n   * Doing so let the user call toast as follow:\n   * toast('1')\n   * toast('2')\n   * toast('3')\n   * Without setTimemout the code above will not work\n   */\n  emit(event: Event, ...args: any[]) {\n    this.list.has(event) &&\n      this.list.get(event)!.forEach((callback: Callback) => {\n        const timer: TimeoutId = setTimeout(() => {\n          // @ts-ignore\n          callback(...args);\n        }, 0);\n\n        this.emitQueue.has(event) || this.emitQueue.set(event, []);\n        this.emitQueue.get(event)!.push(timer);\n      });\n  }\n};\n","import {\n  useState,\n  useRef,\n  useEffect,\n  isValidElement,\n  DOMAttributes\n} from 'react';\n\nimport { isFn, Default, Direction, SyntheticEvent } from '../utils';\nimport { ToastProps } from '../types';\n\ninterface Draggable {\n  start: number;\n  x: number;\n  y: number;\n  delta: number;\n  removalDistance: number;\n  canCloseOnClick: boolean;\n  canDrag: boolean;\n  boundingRect: DOMRect | null;\n  didMove: boolean;\n}\n\ntype DragEvent = MouseEvent & TouchEvent;\n\nfunction getX(e: DragEvent) {\n  return e.targetTouches && e.targetTouches.length >= 1\n    ? e.targetTouches[0].clientX\n    : e.clientX;\n}\n\nfunction getY(e: DragEvent) {\n  return e.targetTouches && e.targetTouches.length >= 1\n    ? e.targetTouches[0].clientY\n    : e.clientY;\n}\n\nexport function useToast(props: ToastProps) {\n  const [isRunning, setIsRunning] = useState(false);\n  const [preventExitTransition, setPreventExitTransition] = useState(false);\n  const toastRef = useRef<HTMLDivElement>(null);\n  const drag = useRef<Draggable>({\n    start: 0,\n    x: 0,\n    y: 0,\n    delta: 0,\n    removalDistance: 0,\n    canCloseOnClick: true,\n    canDrag: false,\n    boundingRect: null,\n    didMove: false\n  }).current;\n  const syncProps = useRef(props);\n  const { autoClose, pauseOnHover, closeToast, onClick, closeOnClick } = props;\n\n  useEffect(() => {\n    syncProps.current = props;\n  });\n\n  useEffect(() => {\n    if (toastRef.current)\n      toastRef.current.addEventListener(\n        SyntheticEvent.ENTRANCE_ANIMATION_END,\n        playToast,\n        { once: true }\n      );\n\n    if (isFn(props.onOpen))\n      props.onOpen(isValidElement(props.children) && props.children.props);\n\n    return () => {\n      const props = syncProps.current;\n      if (isFn(props.onClose))\n        props.onClose(isValidElement(props.children) && props.children.props);\n    };\n  }, []);\n\n  useEffect(() => {\n    props.pauseOnFocusLoss && bindFocusEvents();\n    return () => {\n      props.pauseOnFocusLoss && unbindFocusEvents();\n    };\n  }, [props.pauseOnFocusLoss]);\n\n  function onDragStart(\n    e: React.MouseEvent<HTMLElement, MouseEvent> | React.TouchEvent<HTMLElement>\n  ) {\n    if (props.draggable) {\n      bindDragEvents();\n      const toast = toastRef.current!;\n      drag.canCloseOnClick = true;\n      drag.canDrag = true;\n      drag.boundingRect = toast.getBoundingClientRect();\n      toast.style.transition = '';\n      drag.x = getX(e.nativeEvent as DragEvent);\n      drag.y = getY(e.nativeEvent as DragEvent);\n\n      if (props.draggableDirection === Direction.X) {\n        drag.start = drag.x;\n        drag.removalDistance =\n          toast.offsetWidth * (props.draggablePercent / 100);\n      } else {\n        drag.start = drag.y;\n        drag.removalDistance =\n          toast.offsetHeight *\n          (props.draggablePercent === Default.DRAGGABLE_PERCENT\n            ? props.draggablePercent * 1.5\n            : props.draggablePercent / 100);\n      }\n    }\n  }\n\n  function onDragTransitionEnd() {\n    if (drag.boundingRect) {\n      const { top, bottom, left, right } = drag.boundingRect;\n\n      if (\n        props.pauseOnHover &&\n        drag.x >= left &&\n        drag.x <= right &&\n        drag.y >= top &&\n        drag.y <= bottom\n      ) {\n        pauseToast();\n      } else {\n        playToast();\n      }\n    }\n  }\n\n  function playToast() {\n    setIsRunning(true);\n  }\n\n  function pauseToast() {\n    setIsRunning(false);\n  }\n\n  function bindFocusEvents() {\n    if (!document.hasFocus()) pauseToast();\n\n    window.addEventListener('focus', playToast);\n    window.addEventListener('blur', pauseToast);\n  }\n\n  function unbindFocusEvents() {\n    window.removeEventListener('focus', playToast);\n    window.removeEventListener('blur', pauseToast);\n  }\n\n  function bindDragEvents() {\n    drag.didMove = false;\n    document.addEventListener('mousemove', onDragMove);\n    document.addEventListener('mouseup', onDragEnd);\n\n    document.addEventListener('touchmove', onDragMove);\n    document.addEventListener('touchend', onDragEnd);\n  }\n\n  function unbindDragEvents() {\n    document.removeEventListener('mousemove', onDragMove);\n    document.removeEventListener('mouseup', onDragEnd);\n\n    document.removeEventListener('touchmove', onDragMove);\n    document.removeEventListener('touchend', onDragEnd);\n  }\n\n  function onDragMove(e: MouseEvent | TouchEvent) {\n    const toast = toastRef.current!;\n    if (drag.canDrag && toast) {\n      drag.didMove = true;\n      if (isRunning) pauseToast();\n      drag.x = getX(e as DragEvent);\n      drag.y = getY(e as DragEvent);\n      if (props.draggableDirection === Direction.X) {\n        drag.delta = drag.x - drag.start;\n      } else {\n        drag.delta = drag.y - drag.start;\n      }\n\n      // prevent false positif during a toast click\n      if (drag.start !== drag.x) drag.canCloseOnClick = false;\n      toast.style.transform = `translate${props.draggableDirection}(${drag.delta}px)`;\n      toast.style.opacity = `${\n        1 - Math.abs(drag.delta / drag.removalDistance)\n      }`;\n    }\n  }\n\n  function onDragEnd() {\n    unbindDragEvents();\n    const toast = toastRef.current!;\n    if (drag.canDrag && drag.didMove && toast) {\n      drag.canDrag = false;\n      if (Math.abs(drag.delta) > drag.removalDistance) {\n        setPreventExitTransition(true);\n        props.closeToast();\n        return;\n      }\n      toast.style.transition = 'transform 0.2s, opacity 0.2s';\n      toast.style.transform = `translate${props.draggableDirection}(0)`;\n      toast.style.opacity = '1';\n    }\n  }\n\n  const eventHandlers: DOMAttributes<HTMLElement> = {\n    onMouseDown: onDragStart,\n    onTouchStart: onDragStart,\n    onMouseUp: onDragTransitionEnd,\n    onTouchEnd: onDragTransitionEnd\n  };\n\n  if (autoClose && pauseOnHover) {\n    eventHandlers.onMouseEnter = pauseToast;\n    eventHandlers.onMouseLeave = playToast;\n  }\n\n  // prevent toast from closing when user drags the toast\n  if (closeOnClick) {\n    eventHandlers.onClick = (e: React.MouseEvent) => {\n      onClick && onClick(e);\n      drag.canCloseOnClick && closeToast();\n    };\n  }\n\n  return {\n    playToast,\n    pauseToast,\n    isRunning,\n    preventExitTransition,\n    toastRef,\n    eventHandlers\n  };\n}\n","import React from 'react';\nimport { Default } from '../utils';\nimport { Theme, TypeOptions } from '../types';\n\nexport interface CloseButtonProps {\n  closeToast: (e: React.MouseEvent<HTMLElement>) => void;\n  type: TypeOptions;\n  ariaLabel?: string;\n  theme: Theme;\n}\n\nexport function CloseButton({\n  closeToast,\n  theme,\n  ariaLabel = 'close'\n}: CloseButtonProps) {\n  return (\n    <button\n      className={`${Default.CSS_NAMESPACE}__close-button ${Default.CSS_NAMESPACE}__close-button--${theme}`}\n      type=\"button\"\n      onClick={e => {\n        e.stopPropagation();\n        closeToast(e);\n      }}\n      aria-label={ariaLabel}\n    >\n      <svg aria-hidden=\"true\" viewBox=\"0 0 14 16\">\n        <path\n          fillRule=\"evenodd\"\n          d=\"M7.71 8.23l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75L1 11.98l3.75-3.75L1 4.48 2.48 3l3.75 3.75L9.98 3l1.48 1.48-3.75 3.75z\"\n        />\n      </svg>\n    </button>\n  );\n}\n","import React from 'react';\nimport cx from 'clsx';\n\nimport { TYPE, Default, isFn } from './../utils';\nimport { TypeOptions, ToastClassName, Theme } from '../types';\n\nexport interface ProgressBarProps {\n  /**\n   * The animation delay which determine when to close the toast\n   */\n  delay: number;\n\n  /**\n   * Whether or not the animation is running or paused\n   */\n  isRunning: boolean;\n\n  /**\n   * Func to close the current toast\n   */\n  closeToast: () => void;\n\n  /**\n   * Optional type : info, success ...\n   */\n  type: TypeOptions;\n\n  /**\n   * The theme that is currently used\n   */\n  theme: Theme;\n\n  /**\n   * Hide or not the progress bar\n   */\n  hide?: boolean;\n\n  /**\n   * Optionnal className\n   */\n  className?: ToastClassName;\n\n  /**\n   * Optionnal inline style\n   */\n  style?: React.CSSProperties;\n\n  /**\n   * Tell wether or not controlled progress bar is used\n   */\n  controlledProgress?: boolean;\n\n  /**\n   * Controlled progress value\n   */\n  progress?: number | string;\n\n  /**\n   * Support rtl content\n   */\n  rtl?: boolean;\n\n  /**\n   * Tell if the component is visible on screen or not\n   */\n  isIn?: boolean;\n}\n\nexport function ProgressBar({\n  delay,\n  isRunning,\n  closeToast,\n  type,\n  hide,\n  className,\n  style: userStyle,\n  controlledProgress,\n  progress,\n  rtl,\n  isIn,\n  theme\n}: ProgressBarProps) {\n  const style: React.CSSProperties = {\n    ...userStyle,\n    animationDuration: `${delay}ms`,\n    animationPlayState: isRunning ? 'running' : 'paused',\n    opacity: hide ? 0 : 1\n  };\n\n  if (controlledProgress) style.transform = `scaleX(${progress})`;\n  const defaultClassName = cx(\n    `${Default.CSS_NAMESPACE}__progress-bar`,\n    controlledProgress\n      ? `${Default.CSS_NAMESPACE}__progress-bar--controlled`\n      : `${Default.CSS_NAMESPACE}__progress-bar--animated`,\n    `${Default.CSS_NAMESPACE}__progress-bar-theme--${theme}`,\n    `${Default.CSS_NAMESPACE}__progress-bar--${type}`,\n    {\n      [`${Default.CSS_NAMESPACE}__progress-bar--rtl`]: rtl\n    }\n  );\n  const classNames = isFn(className)\n    ? className({\n        rtl,\n        type,\n        defaultClassName\n      })\n    : cx(defaultClassName, className);\n\n  // 🧐 controlledProgress is derived from progress\n  // so if controlledProgress is set\n  // it means that this is also the case for progress\n  const animationEvent = {\n    [controlledProgress && progress! >= 1\n      ? 'onTransitionEnd'\n      : 'onAnimationEnd']:\n      controlledProgress && progress! < 1\n        ? null\n        : () => {\n            isIn && closeToast();\n          }\n  };\n\n  // TODO: add aria-valuenow, aria-valuemax, aria-valuemin\n\n  return (\n    <div\n      role=\"progressbar\"\n      aria-hidden={hide ? 'true' : 'false'}\n      aria-label=\"notification timer\"\n      className={classNames}\n      style={style}\n      {...animationEvent}\n    />\n  );\n}\n\nProgressBar.defaultProps = {\n  type: TYPE.DEFAULT,\n  hide: false\n};\n","import React from 'react';\n\nimport { Theme, TypeOptions } from '../types';\nimport { Default } from '../utils';\n\n/**\n * Used when providing custom icon\n */\nexport interface IconProps {\n  theme: Theme;\n  type: TypeOptions;\n}\n\nexport type BuiltInIconProps = React.SVGProps<SVGSVGElement> & IconProps;\n\nconst Svg: React.FC<BuiltInIconProps> = ({ theme, type, ...rest }) => (\n  <svg\n    viewBox=\"0 0 24 24\"\n    width=\"100%\"\n    height=\"100%\"\n    fill={\n      theme === 'colored'\n        ? 'currentColor'\n        : `var(--toastify-icon-color-${type})`\n    }\n    {...rest}\n  />\n);\n\nfunction Warning(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M23.32 17.191L15.438 2.184C14.728.833 13.416 0 11.996 0c-1.42 0-2.733.833-3.443 2.184L.533 17.448a4.744 4.744 0 000 4.368C1.243 23.167 2.555 24 3.975 24h16.05C22.22 24 24 22.044 24 19.632c0-.904-.251-1.746-.68-2.44zm-9.622 1.46c0 1.033-.724 1.823-1.698 1.823s-1.698-.79-1.698-1.822v-.043c0-1.028.724-1.822 1.698-1.822s1.698.79 1.698 1.822v.043zm.039-12.285l-.84 8.06c-.057.581-.408.943-.897.943-.49 0-.84-.367-.896-.942l-.84-8.065c-.057-.624.25-1.095.779-1.095h1.91c.528.005.84.476.784 1.1z\" />\n    </Svg>\n  );\n}\n\nfunction Info(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M12 0a12 12 0 1012 12A12.013 12.013 0 0012 0zm.25 5a1.5 1.5 0 11-1.5 1.5 1.5 1.5 0 011.5-1.5zm2.25 13.5h-4a1 1 0 010-2h.75a.25.25 0 00.25-.25v-4.5a.25.25 0 00-.25-.25h-.75a1 1 0 010-2h1a2 2 0 012 2v4.75a.25.25 0 00.25.25h.75a1 1 0 110 2z\" />\n    </Svg>\n  );\n}\n\nfunction Success(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M12 0a12 12 0 1012 12A12.014 12.014 0 0012 0zm6.927 8.2l-6.845 9.289a1.011 1.011 0 01-1.43.188l-4.888-3.908a1 1 0 111.25-1.562l4.076 3.261 6.227-8.451a1 1 0 111.61 1.183z\" />\n    </Svg>\n  );\n}\n\nfunction Error(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M11.983 0a12.206 12.206 0 00-8.51 3.653A11.8 11.8 0 000 12.207 11.779 11.779 0 0011.8 24h.214A12.111 12.111 0 0024 11.791 11.766 11.766 0 0011.983 0zM10.5 16.542a1.476 1.476 0 011.449-1.53h.027a1.527 1.527 0 011.523 1.47 1.475 1.475 0 01-1.449 1.53h-.027a1.529 1.529 0 01-1.523-1.47zM11 12.5v-6a1 1 0 012 0v6a1 1 0 11-2 0z\" />\n    </Svg>\n  );\n}\n\nfunction Spinner() {\n  return <div className={`${Default.CSS_NAMESPACE}__spinner`} />;\n}\n\nexport const Icons = {\n  info: Info,\n  warning: Warning,\n  success: Success,\n  error: Error,\n  spinner: Spinner\n};\n","import React from 'react';\nimport cx from 'clsx';\n\nimport { ProgressBar } from './ProgressBar';\nimport { ToastProps } from '../types';\nimport { Default, isFn, isStr } from '../utils';\nimport { useToast } from '../hooks/useToast';\nimport { Icons } from './Icons';\n\nexport const Toast: React.FC<ToastProps> = props => {\n  const { isRunning, preventExitTransition, toastRef, eventHandlers } =\n    useToast(props);\n  const {\n    closeButton,\n    children,\n    autoClose,\n    onClick,\n    type,\n    hideProgressBar,\n    closeToast,\n    transition: Transition,\n    position,\n    className,\n    style,\n    bodyClassName,\n    bodyStyle,\n    progressClassName,\n    progressStyle,\n    updateId,\n    role,\n    progress,\n    rtl,\n    toastId,\n    deleteToast,\n    isIn,\n    isLoading,\n    icon,\n    theme\n  } = props;\n  const defaultClassName = cx(\n    `${Default.CSS_NAMESPACE}__toast`,\n    `${Default.CSS_NAMESPACE}__toast-theme--${theme}`,\n    `${Default.CSS_NAMESPACE}__toast--${type}`,\n    {\n      [`${Default.CSS_NAMESPACE}__toast--rtl`]: rtl\n    }\n  );\n  const cssClasses = isFn(className)\n    ? className({\n        rtl,\n        position,\n        type,\n        defaultClassName\n      })\n    : cx(defaultClassName, className);\n  const isProgressControlled = !!progress;\n\n  function renderCloseButton(closeButton: any) {\n    if (!closeButton) return;\n\n    const props = { closeToast, type, theme };\n\n    if (isFn(closeButton)) return closeButton(props);\n\n    if (React.isValidElement(closeButton))\n      return React.cloneElement(closeButton, props);\n  }\n\n  const maybeIcon = Icons[type as keyof typeof Icons];\n  const iconProps = { theme, type };\n  let Icon: React.ReactNode = maybeIcon && maybeIcon(iconProps);\n\n  if (icon === false) {\n    Icon = void 0;\n  } else if (isFn(icon)) {\n    Icon = icon(iconProps);\n  } else if (React.isValidElement(icon)) {\n    Icon = React.cloneElement(icon, iconProps);\n  } else if (isStr(icon)) {\n    Icon = icon;\n  } else if (isLoading) {\n    Icon = Icons.spinner();\n  }\n\n  return (\n    <Transition\n      isIn={isIn}\n      done={deleteToast}\n      position={position}\n      preventExitTransition={preventExitTransition}\n      nodeRef={toastRef}\n    >\n      <div\n        id={toastId as string}\n        onClick={onClick}\n        className={cssClasses}\n        {...eventHandlers}\n        style={style}\n        ref={toastRef}\n      >\n        <div\n          {...(isIn && { role: role })}\n          className={\n            isFn(bodyClassName)\n              ? bodyClassName({ type })\n              : cx(`${Default.CSS_NAMESPACE}__toast-body`, bodyClassName)\n          }\n          style={bodyStyle}\n        >\n          {Icon && (\n            <div\n              className={cx(`${Default.CSS_NAMESPACE}__toast-icon`, {\n                [`${Default.CSS_NAMESPACE}--animate-icon ${Default.CSS_NAMESPACE}__zoom-enter`]:\n                  !isLoading\n              })}\n            >\n              {Icon}\n            </div>\n          )}\n          <div>{children}</div>\n        </div>\n        {renderCloseButton(closeButton)}\n        {(autoClose || isProgressControlled) && (\n          <ProgressBar\n            {...(updateId && !isProgressControlled\n              ? { key: `pb-${updateId}` }\n              : {})}\n            rtl={rtl}\n            theme={theme}\n            delay={autoClose as number}\n            isRunning={isRunning}\n            isIn={isIn}\n            closeToast={closeToast}\n            hide={hideProgressBar}\n            type={type}\n            style={progressStyle}\n            className={progressClassName}\n            controlledProgress={isProgressControlled}\n            progress={progress}\n          />\n        )}\n      </div>\n    </Transition>\n  );\n};\n","import { Default, cssTransition } from '../utils';\n\nconst Bounce = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__bounce-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__bounce-exit`,\n  appendPosition: true\n});\n\nconst Slide = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__slide-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__slide-exit`,\n  appendPosition: true\n});\n\nconst Zoom = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__zoom-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__zoom-exit`\n});\n\nconst Flip = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__flip-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__flip-exit`\n});\n\nexport { Bounce, Slide, Zoom, Flip };\n","// https://github.com/yannickcr/eslint-plugin-react/issues/3140\n/* eslint react/prop-types: \"off\" */\nimport React, { forwardRef, StyleHTMLAttributes, useEffect } from 'react';\nimport cx from 'clsx';\n\nimport { Toast } from './Toast';\nimport { CloseButton } from './CloseButton';\nimport { Bounce } from './Transitions';\nimport { POSITION, Direction, Default, parseClassName, isFn } from '../utils';\nimport { useToastContainer } from '../hooks/useToastContainer';\nimport { ToastContainerProps, ToastPosition } from '../types';\n\nexport const ToastContainer = forwardRef<HTMLDivElement, ToastContainerProps>(\n  (props, ref) => {\n    const { getToastToRender, containerRef, isToastActive } =\n      useToastContainer(props);\n    const { className, style, rtl, containerId } = props;\n\n    function getClassName(position: ToastPosition) {\n      const defaultClassName = cx(\n        `${Default.CSS_NAMESPACE}__toast-container`,\n        `${Default.CSS_NAMESPACE}__toast-container--${position}`,\n        { [`${Default.CSS_NAMESPACE}__toast-container--rtl`]: rtl }\n      );\n      return isFn(className)\n        ? className({\n            position,\n            rtl,\n            defaultClassName\n          })\n        : cx(defaultClassName, parseClassName(className));\n    }\n\n    useEffect(() => {\n      if (ref) {\n        (ref as React.MutableRefObject<HTMLDivElement>).current =\n          containerRef.current!;\n      }\n    }, []);\n\n    return (\n      <div\n        ref={containerRef}\n        className={Default.CSS_NAMESPACE as string}\n        id={containerId as string}\n      >\n        {getToastToRender((position, toastList) => {\n          const containerStyle: React.CSSProperties = !toastList.length\n            ? { ...style, pointerEvents: 'none' }\n            : { ...style };\n\n          return (\n            <div\n              className={getClassName(position)}\n              style={containerStyle}\n              key={`container-${position}`}\n            >\n              {toastList.map(({ content, props: toastProps }, i) => {\n                return (\n                  <Toast\n                    {...toastProps}\n                    isIn={isToastActive(toastProps.toastId)}\n                    style={\n                      {\n                        '--nth': i + 1,\n                        '--len': toastList.length\n                      } as StyleHTMLAttributes<HTMLDivElement>\n                    }\n                    key={`toast-${toastProps.key}`}\n                    closeButton={\n                      toastProps.closeButton === true\n                        ? CloseButton\n                        : toastProps.closeButton\n                    }\n                  >\n                    {content}\n                  </Toast>\n                );\n              })}\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n);\n\nToastContainer.displayName = 'ToastContainer';\n\nToastContainer.defaultProps = {\n  position: POSITION.TOP_RIGHT as ToastPosition,\n  transition: Bounce,\n  rtl: false,\n  autoClose: 5000,\n  hideProgressBar: false,\n  closeButton: CloseButton,\n  pauseOnHover: true,\n  pauseOnFocusLoss: true,\n  closeOnClick: true,\n  newestOnTop: false,\n  draggable: true,\n  draggablePercent: Default.DRAGGABLE_PERCENT as number,\n  draggableDirection: Direction.X,\n  role: 'alert',\n  theme: 'light'\n};\n","import {\n  useEffect,\n  useRef,\n  useReducer,\n  cloneElement,\n  isValidElement,\n  useState\n} from 'react';\nimport {\n  parseClassName,\n  canBeRendered,\n  isBool,\n  isFn,\n  isNum,\n  isStr,\n  isToastIdValid,\n  getAutoCloseDelay,\n  toToastItem\n} from '../utils';\nimport { eventManager, Event } from '../core/eventManager';\n\nimport {\n  Id,\n  ToastContainerProps,\n  ToastProps,\n  ToastContent,\n  Toast,\n  ToastPosition,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps,\n  ToastTransition\n} from '../types';\n\ninterface QueuedToast {\n  toastContent: ToastContent;\n  toastProps: ToastProps;\n  staleId?: Id;\n}\n\nexport interface ContainerInstance {\n  toastKey: number;\n  displayedToast: number;\n  props: ToastContainerProps;\n  containerId?: Id | null;\n  isToastActive: (toastId: Id) => boolean;\n  getToast: (id: Id) => Toast | null | undefined;\n  queue: QueuedToast[];\n  count: number;\n}\n\nexport function useToastContainer(props: ToastContainerProps) {\n  const [, forceUpdate] = useReducer(x => x + 1, 0);\n  const [toastIds, setToastIds] = useState<Id[]>([]);\n  const containerRef = useRef(null);\n  const toastToRender = useRef(new Map<Id, Toast>()).current;\n  const isToastActive = (id: Id) => toastIds.indexOf(id) !== -1;\n  const instance = useRef<ContainerInstance>({\n    toastKey: 1,\n    displayedToast: 0,\n    count: 0,\n    queue: [],\n    props,\n    containerId: null,\n    isToastActive,\n    getToast: id => toastToRender.get(id)\n  }).current;\n\n  useEffect(() => {\n    instance.containerId = props.containerId;\n    eventManager\n      .cancelEmit(Event.WillUnmount)\n      .on(Event.Show, buildToast)\n      .on(Event.Clear, toastId => containerRef.current && removeToast(toastId))\n      .on(Event.ClearWaitingQueue, clearWaitingQueue)\n      .emit(Event.DidMount, instance);\n\n    return () => eventManager.emit(Event.WillUnmount, instance);\n  }, []);\n\n  useEffect(() => {\n    instance.props = props;\n    instance.isToastActive = isToastActive;\n    instance.displayedToast = toastIds.length;\n  });\n\n  function clearWaitingQueue({ containerId }: ClearWaitingQueueParams) {\n    const { limit } = instance.props;\n    if (limit && (!containerId || instance.containerId === containerId)) {\n      instance.count -= instance.queue.length;\n      instance.queue = [];\n    }\n  }\n\n  function removeToast(toastId?: Id) {\n    setToastIds(state =>\n      isToastIdValid(toastId) ? state.filter(id => id !== toastId) : []\n    );\n  }\n\n  function dequeueToast() {\n    const { toastContent, toastProps, staleId } =\n      instance.queue.shift() as QueuedToast;\n    appendToast(toastContent, toastProps, staleId);\n  }\n\n  /**\n   * check if a container is attached to the dom\n   * check for multi-container, build only if associated\n   * check for duplicate toastId if no update\n   */\n  function isNotValid(options: NotValidatedToastProps) {\n    return (\n      !containerRef.current ||\n      (instance.props.enableMultiContainer &&\n        options.containerId !== instance.props.containerId) ||\n      (toastToRender.has(options.toastId) && options.updateId == null)\n    );\n  }\n\n  // this function and all the function called inside needs to rely on refs\n  function buildToast(\n    content: ToastContent,\n    { delay, staleId, ...options }: NotValidatedToastProps\n  ) {\n    if (!canBeRendered(content) || isNotValid(options)) return;\n\n    const { toastId, updateId, data } = options;\n    const { props } = instance;\n    const closeToast = () => removeToast(toastId);\n    const isNotAnUpdate = updateId == null;\n\n    if (isNotAnUpdate) instance.count++;\n\n    const toastProps: ToastProps = {\n      toastId,\n      updateId,\n      containerId: options.containerId,\n      isLoading: options.isLoading,\n      theme: options.theme || props.theme!,\n      icon: options.icon != null ? options.icon : props.icon,\n      isIn: false,\n      key: options.key || instance.toastKey++,\n      type: options.type!,\n      closeToast: closeToast,\n      closeButton: options.closeButton,\n      rtl: props.rtl,\n      position: options.position || (props.position as ToastPosition),\n      transition: options.transition || (props.transition as ToastTransition),\n      className: parseClassName(options.className || props.toastClassName),\n      bodyClassName: parseClassName(\n        options.bodyClassName || props.bodyClassName\n      ),\n      style: options.style || props.toastStyle,\n      bodyStyle: options.bodyStyle || props.bodyStyle,\n      onClick: options.onClick || props.onClick,\n      pauseOnHover: isBool(options.pauseOnHover)\n        ? options.pauseOnHover\n        : props.pauseOnHover,\n      pauseOnFocusLoss: isBool(options.pauseOnFocusLoss)\n        ? options.pauseOnFocusLoss\n        : props.pauseOnFocusLoss,\n      draggable: isBool(options.draggable)\n        ? options.draggable\n        : props.draggable,\n      draggablePercent:\n        options.draggablePercent || (props.draggablePercent as number),\n      draggableDirection:\n        options.draggableDirection || props.draggableDirection,\n      closeOnClick: isBool(options.closeOnClick)\n        ? options.closeOnClick\n        : props.closeOnClick,\n      progressClassName: parseClassName(\n        options.progressClassName || props.progressClassName\n      ),\n      progressStyle: options.progressStyle || props.progressStyle,\n      autoClose: options.isLoading\n        ? false\n        : getAutoCloseDelay(options.autoClose, props.autoClose),\n      hideProgressBar: isBool(options.hideProgressBar)\n        ? options.hideProgressBar\n        : props.hideProgressBar,\n      progress: options.progress,\n      role: options.role || props.role,\n      deleteToast() {\n        const removed = toToastItem(toastToRender.get(toastId)!, 'removed');\n        toastToRender.delete(toastId);\n\n        eventManager.emit(Event.Change, removed);\n\n        const queueLen = instance.queue.length;\n        instance.count = isToastIdValid(toastId)\n          ? instance.count - 1\n          : instance.count - instance.displayedToast;\n\n        if (instance.count < 0) instance.count = 0;\n\n        if (queueLen > 0) {\n          const freeSlot = isToastIdValid(toastId) ? 1 : instance.props.limit!;\n\n          if (queueLen === 1 || freeSlot === 1) {\n            instance.displayedToast++;\n            dequeueToast();\n          } else {\n            const toDequeue = freeSlot > queueLen ? queueLen : freeSlot;\n            instance.displayedToast = toDequeue;\n\n            for (let i = 0; i < toDequeue; i++) dequeueToast();\n          }\n        } else {\n          forceUpdate();\n        }\n      }\n    };\n\n    if (isFn(options.onOpen)) toastProps.onOpen = options.onOpen;\n    if (isFn(options.onClose)) toastProps.onClose = options.onClose;\n\n    toastProps.closeButton = props.closeButton;\n\n    if (options.closeButton === false || canBeRendered(options.closeButton)) {\n      toastProps.closeButton = options.closeButton;\n    } else if (options.closeButton === true) {\n      toastProps.closeButton = canBeRendered(props.closeButton)\n        ? props.closeButton\n        : true;\n    }\n\n    let toastContent = content;\n\n    if (isValidElement(content) && !isStr(content.type)) {\n      toastContent = cloneElement(content, {\n        closeToast,\n        toastProps,\n        data\n      });\n    } else if (isFn(content)) {\n      toastContent = content({ closeToast, toastProps, data });\n    }\n\n    // not handling limit + delay by design. Waiting for user feedback first\n    if (\n      props.limit &&\n      props.limit > 0 &&\n      instance.count > props.limit &&\n      isNotAnUpdate\n    ) {\n      instance.queue.push({ toastContent, toastProps, staleId });\n    } else if (isNum(delay)) {\n      setTimeout(() => {\n        appendToast(toastContent, toastProps, staleId);\n      }, delay);\n    } else {\n      appendToast(toastContent, toastProps, staleId);\n    }\n  }\n\n  function appendToast(\n    content: ToastContent,\n    toastProps: ToastProps,\n    staleId?: Id\n  ) {\n    const { toastId } = toastProps;\n\n    if (staleId) toastToRender.delete(staleId);\n\n    const toast = {\n      content,\n      props: toastProps\n    };\n    toastToRender.set(toastId, toast);\n\n    setToastIds(state => [...state, toastId].filter(id => id !== staleId));\n    eventManager.emit(\n      Event.Change,\n      toToastItem(toast, toast.props.updateId == null ? 'added' : 'updated')\n    );\n  }\n\n  function getToastToRender<T>(\n    cb: (position: ToastPosition, toastList: Toast[]) => T\n  ) {\n    const toRender = new Map<ToastPosition, Toast[]>();\n    const collection = Array.from(toastToRender.values());\n\n    if (props.newestOnTop) collection.reverse();\n\n    collection.forEach(toast => {\n      const { position } = toast.props;\n      toRender.has(position) || toRender.set(position, []);\n      toRender.get(position)!.push(toast);\n    });\n\n    return Array.from(toRender, p => cb(p[0], p[1]));\n  }\n\n  return {\n    getToastToRender,\n    containerRef,\n    isToastActive\n  };\n}\n","import { POSITION, TYPE, isStr, isNum, isFn } from '../utils';\nimport { eventManager, OnChangeCallback, Event } from './eventManager';\nimport {\n  ToastContent,\n  ToastOptions,\n  ToastProps,\n  Id,\n  UpdateOptions,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps,\n  TypeOptions\n} from '../types';\nimport { ContainerInstance } from '../hooks';\n\ninterface EnqueuedToast {\n  content: ToastContent;\n  options: NotValidatedToastProps;\n}\n\nlet containers = new Map<ContainerInstance | Id, ContainerInstance>();\nlet latestInstance: ContainerInstance | Id;\nlet queue: EnqueuedToast[] = [];\n\n/**\n * Get the toast by id, given it's in the DOM, otherwise returns null\n */\nfunction getToast(toastId: Id, { containerId }: ToastOptions) {\n  const container = containers.get(containerId || latestInstance);\n  if (!container) return null;\n\n  return container.getToast(toastId);\n}\n\n/**\n * Generate a random toastId\n */\nfunction generateToastId() {\n  return Math.random().toString(36).substring(2, 9);\n}\n\n/**\n * Generate a toastId or use the one provided\n */\nfunction getToastId(options?: ToastOptions) {\n  if (options && (isStr(options.toastId) || isNum(options.toastId))) {\n    return options.toastId;\n  }\n\n  return generateToastId();\n}\n\n/**\n * If the container is not mounted, the toast is enqueued and\n * the container lazy mounted\n */\nfunction dispatchToast(\n  content: ToastContent,\n  options: NotValidatedToastProps\n): Id {\n  if (containers.size > 0) {\n    eventManager.emit(Event.Show, content, options);\n  } else {\n    queue.push({ content, options });\n  }\n\n  return options.toastId;\n}\n\n/**\n * Merge provided options with the defaults settings and generate the toastId\n */\nfunction mergeOptions(type: string, options?: ToastOptions) {\n  return {\n    ...options,\n    type: (options && options.type) || type,\n    toastId: getToastId(options)\n  } as NotValidatedToastProps;\n}\n\nfunction createToastByType(type: string) {\n  return (content: ToastContent, options?: ToastOptions) =>\n    dispatchToast(content, mergeOptions(type, options));\n}\n\nfunction toast(content: ToastContent, options?: ToastOptions) {\n  return dispatchToast(content, mergeOptions(TYPE.DEFAULT, options));\n}\n\ntoast.loading = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(\n    content,\n    mergeOptions(TYPE.DEFAULT, {\n      isLoading: true,\n      autoClose: false,\n      closeOnClick: false,\n      closeButton: false,\n      draggable: false,\n      ...options\n    })\n  );\n\nexport interface ToastPromiseParams<T = unknown> {\n  pending?: string | UpdateOptions<void>;\n  success?: string | UpdateOptions<T>;\n  error?: string | UpdateOptions<any>;\n}\n\nfunction handlePromise<T = unknown>(\n  promise: Promise<T> | (() => Promise<T>),\n  { pending, error, success }: ToastPromiseParams<T>,\n  options?: ToastOptions\n) {\n  let id: Id;\n\n  if (pending) {\n    id = isStr(pending)\n      ? toast.loading(pending, options)\n      : toast.loading(pending.render, {\n          ...options,\n          ...(pending as ToastOptions)\n        });\n  }\n\n  const resetParams = {\n    isLoading: null,\n    autoClose: null,\n    closeOnClick: null,\n    closeButton: null,\n    draggable: null,\n    delay: 100\n  };\n\n  const resolver = (\n    type: TypeOptions,\n    input: string | UpdateOptions<T> | undefined,\n    result: T\n  ) => {\n    // Remove the toast if the input has not been provided. This prevents the toast from hanging\n    // in the pending state if a success/error toast has not been provided.\n    if (input == null) {\n      toast.dismiss(id);\n      return;\n    }\n\n    const baseParams = {\n      type,\n      ...resetParams,\n      ...options,\n      data: result\n    };\n    const params = isStr(input) ? { render: input } : input;\n\n    // if the id is set we know that it's an update\n    if (id) {\n      toast.update(id, {\n        ...baseParams,\n        ...params\n      });\n    } else {\n      // using toast.promise without loading\n      toast(params.render, {\n        ...baseParams,\n        ...params\n      } as ToastOptions);\n    }\n\n    return result;\n  };\n\n  const p = isFn(promise) ? promise() : promise;\n\n  //call the resolvers only when needed\n  p.then(result => resolver('success', success, result)).catch(err =>\n    resolver('error', error, err)\n  );\n\n  return p;\n}\n\ntoast.promise = handlePromise;\ntoast.success = createToastByType(TYPE.SUCCESS);\ntoast.info = createToastByType(TYPE.INFO);\ntoast.error = createToastByType(TYPE.ERROR);\ntoast.warning = createToastByType(TYPE.WARNING);\ntoast.warn = toast.warning;\ntoast.dark = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(\n    content,\n    mergeOptions(TYPE.DEFAULT, {\n      theme: 'dark',\n      ...options\n    })\n  );\n\n/**\n * Remove toast programmaticaly\n */\ntoast.dismiss = (id?: Id) => eventManager.emit(Event.Clear, id);\n\n/**\n * Clear waiting queue when limit is used\n */\ntoast.clearWaitingQueue = (params: ClearWaitingQueueParams = {}) =>\n  eventManager.emit(Event.ClearWaitingQueue, params);\n\n/**\n * return true if one container is displaying the toast\n */\ntoast.isActive = (id: Id) => {\n  let isToastActive = false;\n\n  containers.forEach(container => {\n    if (container.isToastActive && container.isToastActive(id)) {\n      isToastActive = true;\n    }\n  });\n\n  return isToastActive;\n};\n\ntoast.update = (toastId: Id, options: UpdateOptions = {}) => {\n  // if you call toast and toast.update directly nothing will be displayed\n  // this is why I defered the update\n  setTimeout(() => {\n    const toast = getToast(toastId, options as ToastOptions);\n    if (toast) {\n      const { props: oldOptions, content: oldContent } = toast;\n\n      const nextOptions = {\n        ...oldOptions,\n        ...options,\n        toastId: options.toastId || toastId,\n        updateId: generateToastId()\n      } as ToastProps & UpdateOptions;\n\n      if (nextOptions.toastId !== toastId) nextOptions.staleId = toastId;\n\n      const content = nextOptions.render || oldContent;\n      delete nextOptions.render;\n\n      dispatchToast(content, nextOptions);\n    }\n  }, 0);\n};\n\n/**\n * Used for controlled progress bar.\n */\ntoast.done = (id: Id) => {\n  toast.update(id, {\n    progress: 1\n  });\n};\n\n/**\n * Subscribe to change when a toast is added, removed and updated\n *\n * Usage:\n * ```\n * const unsubscribe = toast.onChange((payload) => {\n *   switch (payload.status) {\n *   case \"added\":\n *     // new toast added\n *     break;\n *   case \"updated\":\n *     // toast updated\n *     break;\n *   case \"removed\":\n *     // toast has been removed\n *     break;\n *   }\n * })\n * ```\n */\ntoast.onChange = (callback: OnChangeCallback) => {\n  eventManager.on(Event.Change, callback);\n  return () => {\n    eventManager.off(Event.Change, callback);\n  };\n};\n\ntoast.POSITION = POSITION;\ntoast.TYPE = TYPE;\n\n/**\n * Wait until the ToastContainer is mounted to dispatch the toast\n * and attach isActive method\n */\neventManager\n  .on(Event.DidMount, (containerInstance: ContainerInstance) => {\n    latestInstance = containerInstance.containerId || containerInstance;\n    containers.set(latestInstance, containerInstance);\n\n    queue.forEach(item => {\n      eventManager.emit(Event.Show, item.content, item.options);\n    });\n\n    queue = [];\n  })\n  .on(Event.WillUnmount, (containerInstance: ContainerInstance) => {\n    containers.delete(containerInstance.containerId || containerInstance);\n\n    if (containers.size === 0) {\n      eventManager\n        .off(Event.Show)\n        .off(Event.Clear)\n        .off(Event.ClearWaitingQueue);\n    }\n  });\n\nexport { toast };\n","export const store = {\n    _origin: 'https://api.emailjs.com',\n};\n","export const validateParams = (userID, serviceID, templateID) => {\n    if (!userID) {\n        throw 'The user ID is required. Visit https://dashboard.emailjs.com/admin/integration';\n    }\n    if (!serviceID) {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID) {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n    return true;\n};\n","export class EmailJSResponseStatus {\n    constructor(httpResponse) {\n        this.status = httpResponse.status;\n        this.text = httpResponse.responseText;\n    }\n}\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n    init,\n    send,\n    sendForm,\n};\n","import { store } from '../../store/store';\n/**\n * Initiation\n * @param {string} userID - set the EmailJS user ID\n * @param {string} origin - set the EmailJS origin\n */\nexport const init = (userID, origin = 'https://api.emailjs.com') => {\n    store._userID = userID;\n    store._origin = origin;\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {object} templatePrams - the template params, what will be set to the EmailJS template\n * @param {string} userID - the EmailJS user ID\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const send = (serviceID, templateID, templatePrams, userID) => {\n    const uID = userID || store._userID;\n    validateParams(uID, serviceID, templateID);\n    const params = {\n        lib_version: '3.2.0',\n        user_id: uID,\n        service_id: serviceID,\n        template_id: templateID,\n        template_params: templatePrams,\n    };\n    return sendPost('/api/v1.0/email/send', JSON.stringify(params), {\n        'Content-type': 'application/json',\n    });\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\nconst findHTMLForm = (form) => {\n    let currentForm;\n    if (typeof form === 'string') {\n        currentForm = document.querySelector(form);\n    }\n    else {\n        currentForm = form;\n    }\n    if (!currentForm || currentForm.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of form';\n    }\n    return currentForm;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {string} userID - the EmailJS user ID\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = (serviceID, templateID, form, userID) => {\n    const uID = userID || store._userID;\n    const currentForm = findHTMLForm(form);\n    validateParams(uID, serviceID, templateID);\n    const formData = new FormData(currentForm);\n    formData.append('lib_version', '3.2.0');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', uID);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n"],"sourceRoot":""}